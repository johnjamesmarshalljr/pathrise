{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","Components/Source.js","Components/Sources.js","Components/Opportunity.js","Components/Opportunities.js","Components/Navbar.js","App.js","redux/reducer.js","index.js"],"names":["SET_ALL_SOURCES","SET_CURRENT_SOURCE","RESET_SOURCES_STATE","setAllSources","sources","type","actionTypes","data","setCurrentSource","source","Source","props","dispatch","useDispatch","navigate","useNavigate","handleClick","id","axios","get","then","sourcesActions","className","rating","src","logo_file","alt","onClick","name","description","Sources","allSources","useSelector","state","rows","map","renderSources","Opportunity","opportunity","company_name","job_title","href","job_url","Opportunities","oppsForSource","opportunities","currentSource","useState","setName","setOpps","useEffect","filterOppsFromInput","filter","opp","toUpperCase","includes","length","placeholder","onChange","e","target","value","renderOpps","Header","class","to","App","object","Navbar","path","element","resetState","options","include","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","sourcesReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6a2ae3b.chunk.js","sourcesContent":["export const SET_ALL_SOURCES = 'SET_ALL_SOURCES'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\nexport const RESET_SOURCES_STATE = 'RESET_SOURCES_STATE'","import axios from \"axios\"\nimport * as actionTypes from './actionTypes'\n\nexport const resetState = () => {\n    return {\n        type: actionTypes.RESET_SOURCES_STATE\n    }\n}\n\nexport const getAllSources = () => {\n    return dispatch => {\n        return axios.get('http://localhost:3001/sources')\n        .then(data => {\n            dispatch(setAllSources(data.data.object))\n        })\n    }\n}\n\nexport const getSource = (id) => {\n    return dispatch => {\n        return axios.get(`http://localhost:3001/sources/${id}`)\n        .then(data => {\n            dispatch(setCurrentSource(data.data))\n            \n        })\n    }\n}\n\nconst setAllSources = sources => {\n    return {\n        type: actionTypes.SET_ALL_SOURCES,\n        data: sources\n    }\n}\n\nconst setCurrentSource = source => {\n    return {\n        type: actionTypes.SET_CURRENT_SOURCE,\n        data: source\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as sourcesActions from './../redux/actions'\nimport { useNavigate } from \"react-router-dom\";\n\nconst Source = (props) => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n\n    const handleClick = ( id) => {\n      dispatch(sourcesActions.getSource(id))\n      navigate(`/sources/${id}/opportunities`)\n    }\n\n    return (\n      <div className=\"Source\">\n        <p className=\"rating\">{props.source.rating} </p>\n        <img className=\"logo\"\n              src={props.source.logo_file}\n              alt=\"logo\"\n            />\n        <li className=\"list-item\" onClick={ ()=>handleClick(props.id) }>{props.source.name} </li>\n          <p className=\"description\"><em>{props.source.description}</em></p>\n      </div>\n    );\n  }\n\nexport default Source;","import React from 'react';\nimport Source from './Source.js'\nimport { useSelector } from 'react-redux';\n\nconst Sources = () => {\n    const allSources = useSelector(state => state.sources.allSources)\n\n    const renderSources = () => {\n      let rows = []\n      rows = allSources.map(source => {\n        return (\n          <Source source={source} id={source.id} key={source.id}/>\n        )        \n      })\n      return !rows ? \"\" : <ul id=\"items-list\" className=\"model-list\">{rows}</ul>\n    }\n\n    return (\n        <section className=\"list-view\">\n          <h2>Job Sources</h2>\n            {renderSources()} \n        </section>\n          )\n}\n\n\nexport default Sources;","import React from 'react';\n\n\nconst Opportunity = (props) => {\n\n    return (\n      <div className=\"Source\">  \n        <img className=\"logo\"\n              src={props.opportunity.source.logo_file}\n              alt=\"logo\"\n            />\n          <li className=\"list-item\"><b> {props.opportunity.company_name}</b></li>\n            <p className=\"description\"><em>Job Title:</em> {props.opportunity.job_title}<br/><p><em>ID:</em> {props.opportunity.id}</p><em>Link:</em> <a href={props.opportunity.job_url}>{props.opportunity.job_url}</a></p>\n      </div>\n    );\n  }\n\nexport default Opportunity;","import React, { useState, useEffect } from 'react';\nimport Opportunity from './Opportunity'\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Opportunities = (props) => {\n    const oppsForSource = useSelector(state => state.sources.opportunities)\n    const currentSource = useSelector(state => state.sources.currentSource)\n    const [name, setName] = useState(\"\")\n    const [opps, setOpps] = useState(null)\n    \n    useEffect(() => {\n      setOpps(oppsForSource)      \n    }, [oppsForSource]);\n\n    const findCurrentSource = () => {\n      if(currentSource){\n           return currentSource.name\n\n      }else{\n        return ''\n      }\n    }\n\n    const handleChange = (e) => {\n      setName(e.target.value)\n      filterOppsFromInput();\n    }\n\n   const filterOppsFromInput = () => {\n      return oppsForSource.filter((opp) =>\n        opp.job_title.toUpperCase().includes(name.toUpperCase())\n      );\n    };\n\n  const renderOpps = () => {\n    let rows = []\n    if(oppsForSource.length === 0){\n      return <ul className=\"model-list\" > <li className=\"list-item\"><p className=\"no\"><em>There aren't any current available job opportunities for this Source</em></p></li></ul>\n    }\n   rows = filterOppsFromInput().map(opp => {\n      return (\n        <Opportunity opportunity={opp} id={opp.id} key={opp.id}/>\n      )        \n    }) \n    return !rows ? \"\" : <ul id=\"items-list\" className=\"model-list\">{rows}</ul>\n  }\n\n  const count = () => {\n    if(oppsForSource){\n      if(oppsForSource.length === 1){\n        return oppsForSource.length + ' opportunity'\n      }\n      return oppsForSource.length + ' opportunities'\n }else{\n   return 'Finding current job opportunities, please wait ...'\n }\n  }\n\n    return (\n        <>\n          <h2> Source: {findCurrentSource()} </h2>\n          \n          <h2 className=\"model-list\">{count()}</h2>\n          {/* <div className=\"center\"> */}\n            <input\n            className=\"newnewnew\"\n            placeholder=\"SEARCH POSITIONS\"\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            />\n          {/* </div> */}\n          {oppsForSource ? renderOpps() : ''}\n          \n        </>\n            )\n}\n\n\nexport default Opportunities;","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sourcesActions from './../redux/actions'\n\nconst Header = () => {\n    const dispatch = useDispatch()\n\n    const reset = () => {\n      dispatch(sourcesActions.resetState())\n    }\n\n  return (\n      <div class=\"links\">\n        <Link to=\"/\">\n          <button onClick={reset} className=\"header example_f myButton\">Home</button>\n        </Link>\n      </div>\n  );\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport Sources from './Components/Sources.js'\nimport Opportunities from './Components/Opportunities'\nimport Navbar from './Components/Navbar'\nimport { Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as sourcesActions from './redux/actions'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const allSources = useSelector(state => state.sources.allSources)\n\n   useEffect(() => {\n    if(!allSources){\n      dispatch(sourcesActions.getAllSources())\n    }        \n      });\n  \n      const renderSources = () => {\n        if (allSources){\n          return (\n            <Routes>\n              <Route path=\"/\" element={<Sources />} />\n              <Route\n                path=\"/sources/:id/opportunities\"\n                element={<Opportunities />}\n              />\n            </Routes>\n          )\n        }else {\n          return ''\n        }\n      }\n     \n  return (\n    <div className=\"App\">\n      <Navbar />\n      {renderSources()}\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\nimport * as actionTypes from './actionTypes'\n\nconst sourcesReducer = (state = [], action) => {\n    switch (action.type) {\n        case actionTypes.RESET_SOURCES_STATE:\n            return resetState(state)\n        case actionTypes.SET_ALL_SOURCES:\n            return setAllSources(state, action.data);\n        case actionTypes.SET_CURRENT_SOURCE:\n            return setCurrentSource(state, action.data);\n        default: \n            return state\n    }\n}\n\nconst resetState = (state) => {\n    return {\n        ...state,\n        currentSource: null,\n        opportunities: null\n    }\n}\n\nconst setAllSources = (state, sources) => {\n    return {\n        ...state,\n        allSources: sources\n    }\n}\n\nconst setCurrentSource = (state, source) => {\n    return {\n        ...state,\n        currentSource: source.object,\n        opportunities: source.options.include\n    }\n}\n\nconst rootReducer = combineReducers({\n    sources: sourcesReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk';\nimport sourcesReducer from './redux/reducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(sourcesReducer, composeEnhancers( applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}